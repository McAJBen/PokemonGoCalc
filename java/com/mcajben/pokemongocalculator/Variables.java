package com.mcajben.pokemongocalculator;

class Variables {

    private static final double[] CPM = {
            0.0940000, 0.1351374, 0.1663979, 0.1926509, 0.2157325,
            0.2365727, 0.2557201, 0.2735304, 0.2902499, 0.3060574,
            0.3210876, 0.3354450, 0.3492127, 0.3624578, 0.3752356,
            0.3875924, 0.3995673, 0.4111936, 0.4225000, 0.4335117,
            0.4431076, 0.4530600, 0.4627984, 0.4723361, 0.4816850,
            0.4908558, 0.4998584, 0.5087018, 0.5173940, 0.5259425,
            0.5343543, 0.5426358, 0.5507927, 0.5588306, 0.5667545,
            0.5745692, 0.5822789, 0.5898879, 0.5974000, 0.6048188,
            0.6121573, 0.6194041, 0.6265671, 0.6336492, 0.6406530,
            0.6475810, 0.6544356, 0.6612193, 0.6679340, 0.6745819,
            0.6811649, 0.6876849, 0.6941437, 0.7005429, 0.7068842,
            0.7131691, 0.7193991, 0.7255756, 0.7317000, 0.7377735,
            0.7377695, 0.7407856, 0.7437894, 0.7467812, 0.7497610,
            0.7527291, 0.7556855, 0.7586304, 0.7615638, 0.7644861,
            0.7673972, 0.7702973, 0.7731865, 0.7760650, 0.7789328,
            0.7817901, 0.7846370, 0.7874736, 0.7903000, 0.7931164
    };

    private static final int[][] pokemon = {
            {90,126,126,2},     {120,156,158,3},    {160,198,200,0},
            {78,128,108,5},     {116,160,140,6},    {156,212,182,0},
            {88,112,142,8},     {118,144,176,9},    {158,186,222,0},
            {90,62,66,11},      {100,56,86,12},     {120,144,144,0},
            {80,68,64,14},      {90,62,82,15},      {130,144,130,0}, // Weedle
            {80,94,90,17},      {126,126,122,18},   {166,170,166,0},
            {60,92,86,20},      {110,146,150,0},
            {80,102,78,22},     {130,168,146,0},
            {70,112,112,24},    {120,166,166,0},
            {70,124,108,26},    {120,200,154,0},
            {100,90,114,28},    {150,150,172,0},
            {110,100,104,30},   {140,132,136,31},   {180,184,190,0},
            {92,110,94,33},     {122,142,128,34},   {162,204,170,0},
            {140,116,124,36},   {190,178,178,0},
            {76,106,118,38},    {146,176,194,0},
            {230,98,54,40},     {280,168,108,0},
            {80,88,90,42},      {150,164,164,0},
            {90,134,130,44},    {120,162,158,45},   {150,202,190,0},
            {70,122,120,47},    {120,162,170,0},
            {120,108,118,49},   {140,172,154,0},
            {20,108,86,51},     {70,148,140,0},
            {80,104,94,53},     {130,156,146,0},
            {100,132,112,55},   {160,194,176,0},
            {80,122,96,57},     {130,178,150,0},
            {110,156,110,59},   {180,230,180,0},
            {80,108,98,61},     {130,132,132,62},   {180,180,202,0},
            {50,110,76,64},     {80,150,112,65},    {110,186,152,0},
            {140,118,96,67},    {160,154,144,68},   {180,198,180,0},
            {100,158,78,70},    {130,190,110,71},   {160,222,152,0},
            {80,106,136,73},    {160,170,196,0},
            {80,106,118,75},    {110,142,156,76},   {160,176,198,0},
            {100,168,138,78},   {130,200,170,0},
            {180,110,110,80},   {190,184,198,0},
            {50,128,138,82},    {100,186,180,0},
            {104,138,132,0},
            {70,126,96,85},     {120,182,150,0},
            {130,104,138,87},   {180,156,192,0},
            {160,124,110,89},   {210,180,188,0},
            {60,120,112,91},    {100,196,196,0},
            {60,136,82,93},     {90,172,118,94},    {120,204,156,0},
            {70,90,186,0},
            {120,104,140,97},   {170,162,196,0},
            {60,116,110,99},    {110,178,168,0},
            {80,102,124,101},   {120,150,174,0},
            {120,110,132,103},  {190,232,164,0},
            {100,102,150,105},  {120,140,202,0},
            {100,148,172,0},
            {100,138,204,0},
            {180,126,160,0},
            {80,136,142,110},   {130,190,198,0},
            {160,110,116,112},  {210,166,160,0},
            {500,40,60,0},
            {130,164,152,0},
            {210,142,178,0},
            {60,122,100,117},   {110,176,150,0},
            {90,112,126,119},   {160,172,160,0},
            {60,130,128,121},   {120,194,192,0},
            {80,154,196,0},
            {140,176,180,0},
            {130,172,134,0},
            {130,198,160,0},
            {130,214,158,0},
            {130,184,186,0},
            {150,148,184,0},
            {40,42,84,130},     {190,192,196,0},
            {260,186,190,0},
            {96,110,110,0},
            {110,114,128,136}, // Eevee(vap)
            {110,114,128,137}, // Eevee(jolt)
            {110,114,128,137}, // Eevee(flare)
            {260,186,168,0},
            {130,192,174,0},
            {130,238,178,0},
            {130,156,158,0},
            {70,132,160,141},   {140,180,202,0},
            {60,148,142,142},   {120,190,190,0},
            {160,182,162,0},
            {320,180,180,0},
            {180,198,242,0},
            {180,232,194,0},
            {180,242,194,0},
            {82,128,110,150},   {122,170,152,151},  {182,250,212,0},
            {212,284,202,0},
            {200,220,220,0}
    };

    public static double getCPM(int j) {
        return CPM[j - 1];
    }

    public static int[] getBaseIV(int dex) {
        return new int[]{pokemon[dex - 1][0], pokemon[dex - 1][1], pokemon[dex - 1][2]};
    }

    public static int getEvolutionDex(int dex) {
        return pokemon[dex - 1][3];
    }

    public static int toCP(int[] stats, int st, int at, int df, double cpm2) {
        return Math.max((int) (Math.pow(stats[0] + st, 0.5) * (stats[1] + at) * Math.pow(stats[2] + df, 0.5) * cpm2), 10);
    }
}